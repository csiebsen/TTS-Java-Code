package com.acme.bo;

import java.util.ArrayList;
import java.util.List;

import com.acme.OrderProcessor;
import com.acme.enums.WorkerTypeEnum;
import com.acme.util.StringUtils;

public abstract class Person implements OrderProcessor{

	// Lab: create and add address object
	// Lab: Add validation for email, require @ and period
	
	private String firstName;
	private String lastName;
	private String email;
	List<Double> orders = new ArrayList<Double>();
	private WorkerTypeEnum workerTypeEnum;
	
	

	public WorkerTypeEnum getWorkerTypeEnum() {
		return workerTypeEnum;
	}

	public void setWorkerTypeEnum(WorkerTypeEnum workerTypeEnum) {
		this.workerTypeEnum = workerTypeEnum;
	}

	public Person (String firstName,String lastName, String email) {
		this.setFirstName(firstName);
		this.setLastName(lastName);
		this.setEmail(email);
	}
	
	public void addOrder(double orderTotal) {
		orders.add(orderTotal);
	};


	public String getTotalPurchaseAmount() {
		double totOrders = 0.0;
		if (null != orders) {
			for(double price:orders) {
				totOrders += price;
			}
		}
		// deduct discount
		totOrders = totOrders * (1 - getDiscount());
		return this.getFirstName() + " " + this.getLastName() + " Order total = " +
			totOrders;
	};	
	
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append(this.getTotalPurchaseAmount()+ "\n");
		sb.append("Name: " + firstName + " " + lastName + "\n");
		sb.append("email: " + email + "\n");
		sb.append("Worker Type: "+ this.getWorkerTypeEnum());
		return sb.toString();
	}
	
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		if (StringUtils.hasSpecialChars(firstName)) {
			throw new RuntimeException("Name must not have special characters [" + firstName+ "]");	
		}		
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		if(!email.contains("@") || !email.contains(".")) {
			throw new RuntimeException("Email must have a @ and a . character [" +
					email+ "]");
		}
		this.email = email;
	}
	
}

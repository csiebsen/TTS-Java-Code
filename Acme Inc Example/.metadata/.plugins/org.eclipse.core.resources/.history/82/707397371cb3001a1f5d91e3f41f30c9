package com.acme.bo;

import java.util.List;

public class Employee extends Person{
	// Lab add SSN to Employee, validate it, include in toString
	
	// CJS: Figure out how to include a private method.
	private String employeeId;
	private double salary;
	private String SSN;

	public Employee (String firstName,String lastName, String email, String id, double salary, String SSN, List<Order> orders) {
		super(firstName, lastName,  email, orders);
		this.setEmployeeId(id);
		this.setSalary(salary);
		this.setSSN(SSN);
	}
	
	public String getTotalPurchases() {
		return getFirstName() + " " + getLastName() + " total purchase is " + calcPurchases();
	};

	private double calcPurchases() {
		double totalPrice = 0.0;
		for(Order order:this.orders) {
			totalPrice += order.price;		
		}
		totalPrice = totalPrice * .9;
		return Math.round(totalPrice);
	}


	public String getEmployeeId() {
		return employeeId;
	}

	public void setEmployeeId(String empoyeeId) {
		this.employeeId = empoyeeId;
	}
	
	@Override
	public String toString() {
		String outPutString = super.toString()+ "Employee Id: " + getEmployeeId() +
				"\n" + "Salary: " + getSalary()+ "\n"  + "SSN: " + getSSN()+ 
				"\n" +  getOrders();
		return outPutString ;
	}
	public double getSalary() {
		return salary;
	}

	public void setSalary(double salary) {
		this.salary = salary;
	}

	public String getSSN() {
		return SSN;
	}

	public void setSSN(String sSN) {
		try {
			Integer.parseInt(sSN);
		} catch (NumberFormatException e) {
			throw new RuntimeException("SSN must be numeric [" + sSN +"]");
		}
		if (sSN.length() != 9) {
			throw new RuntimeException("SSN must be 9 digits [" + sSN +"]");
		}
		SSN = sSN;
	}

}
